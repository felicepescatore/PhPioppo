//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Threading.Tasks;

namespace IT.FP.TestLibrary.FakeService {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="FakeService.IFakeService")]
    public interface IFakeService {
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetMessageSeparator", ReplyAction="http://tempuri.org/IFakeService/GetMessageSeparatorResponse")]
        string GetMessageSeparator();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetMessageSeparator", ReplyAction="http://tempuri.org/IFakeService/GetMessageSeparatorResponse")]
        Task<string> GetMessageSeparatorAsync();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage1", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage1Response")]
        string GetHostMessage1();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage1", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage1Response")]
        Task<string> GetHostMessage1Async();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage2", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage2Response")]
        string GetHostMessage2();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage2", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage2Response")]
        Task<string> GetHostMessage2Async();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage3", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage3Response")]
        string GetHostMessage3();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetHostMessage3", ReplyAction="http://tempuri.org/IFakeService/GetHostMessage3Response")]
        Task<string> GetHostMessage3Async();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage1", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage1Response")]
        string GetRawMessage1();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage1", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage1Response")]
        Task<string> GetRawMessage1Async();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage2", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage2Response")]
        string GetRawMessage2();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage2", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage2Response")]
        Task<string> GetRawMessage2Async();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage3", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage3Response")]
        string GetRawMessage3();
        
        [OperationContract(Action="http://tempuri.org/IFakeService/GetRawMessage3", ReplyAction="http://tempuri.org/IFakeService/GetRawMessage3Response")]
        Task<string> GetRawMessage3Async();
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface IFakeServiceChannel : IFakeService, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class FakeServiceClient : ClientBase<IFakeService>, IFakeService {
        
        public FakeServiceClient() {
        }
        
        public FakeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FakeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FakeServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FakeServiceClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMessageSeparator() {
            return base.Channel.GetMessageSeparator();
        }
        
        public Task<string> GetMessageSeparatorAsync() {
            return base.Channel.GetMessageSeparatorAsync();
        }
        
        public string GetHostMessage1() {
            return base.Channel.GetHostMessage1();
        }
        
        public Task<string> GetHostMessage1Async() {
            return base.Channel.GetHostMessage1Async();
        }
        
        public string GetHostMessage2() {
            return base.Channel.GetHostMessage2();
        }
        
        public Task<string> GetHostMessage2Async() {
            return base.Channel.GetHostMessage2Async();
        }
        
        public string GetHostMessage3() {
            return base.Channel.GetHostMessage3();
        }
        
        public Task<string> GetHostMessage3Async() {
            return base.Channel.GetHostMessage3Async();
        }
        
        public string GetRawMessage1() {
            return base.Channel.GetRawMessage1();
        }
        
        public Task<string> GetRawMessage1Async() {
            return base.Channel.GetRawMessage1Async();
        }
        
        public string GetRawMessage2() {
            return base.Channel.GetRawMessage2();
        }
        
        public Task<string> GetRawMessage2Async() {
            return base.Channel.GetRawMessage2Async();
        }
        
        public string GetRawMessage3() {
            return base.Channel.GetRawMessage3();
        }
        
        public Task<string> GetRawMessage3Async() {
            return base.Channel.GetRawMessage3Async();
        }
    }
}
